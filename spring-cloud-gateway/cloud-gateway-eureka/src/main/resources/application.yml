server:
  port: 8888
spring:
  application:
    name: cloud-gateway-eureka
  redis:
    host: localhost
    password:
    port: 6379
#  cloud:
#    gateway:
#     discovery:
#        locator:
#         enabled: true
#     routes:
#     - id: add_request_parameter_route_01
#       uri: http://localhost:9000
#       filters:
#       - AddRequestParameter=p1, bar
#       predicates:
#       - Method=GET
#       - Path=/p1
#
#     - id: add_request_parameter_route_02
#       uri: http://localhost:9001
#       filters:
#       - AddRequestParameter=p2, bar
#       predicates:
#       - Method=GET
#       - Path=/p2


#     - id: produce01
#       uri: http://localhost:9000
#       predicates:
#       - Path=/**
#       - Weight=produce, 10
#
#     - id: produce02
#       uri: http://localhost:9001
#       predicates:
#       - Path=/**
#       - Weight=produce, 90

#     - id: add_request_parameter_route
##       uri: http://localhost:9000
#       uri: lb://spring-cloud-producer
#       filters:
#       - AddRequestParameter=foo, bar
#       predicates:
#         - Method=GET
#     - id: requestratelimiter_route
#       uri: lb://spring-cloud-producer
#       filters:
#       - name: RequestRateLimiter
#         args:
#           redis-rate-limiter.replenishRate: 10
#           redis-rate-limiter.burstCapacity: 20
#           key-resolver: "#{@userKeyResolver}"
#       predicates:
#         - Method=GET
#     - id: hystrix_route
#       uri: lb://spring-cloud-producer
#       predicates:
#       - Path=/consumingserviceendpoint
#       filters:
#       - name: Hystrix
#         args:
#           name: fallbackcmd
#           fallbackUri: forward:/incaseoffailureusethis
#     - id: retry_test
#       uri: lb://spring-cloud-producer
#       predicates:
#       - Path=/retry
#       filters:
#       - name: Retry
#         args:
#           retries: 3
#           statuses: BAD_GATEWAY
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/
logging:
  level:
    org.springframework.cloud.gateway: debug

# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always